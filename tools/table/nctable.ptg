/* $1: PTGNode StringPrint */
/* $2: PTGNode RulePrint */
/* $3: PTGNode FieldPrint */
/* $4: table name (string) */
/* $5: rule definitions */
/* $6: PTGNode window instantiation */
File:
  "%{\n"
  "  /* nctable output */\n"
  "  #include \"dasio/nctable.h\"\n"
  "  static int " $4 string "_winnum;\n\n"
  $5 "\n"
  "  static void " $4 string "_redraw(void) {\n"
  "    nct_clear(" $4 string "_winnum);\n"
  $1
  $2
  "  }\n\n"
  "  static void " $4 string "_init(void) {\n"
  $6
  "    " $4 string "_redraw();\n"
  "  }\n"
  "%}\n"
  "TM INITFUNC " $4 string "_init();\n"
  "TM REDRAWFUNC " $4 string "_redraw();\n"
  $3
  [ preview_loop ]

/* PTGWindow(table_name,w,h,preview) */
Window:
  "    " $1 string "_winnum = nct_init(\"" $1 string "\","
	  $2 int "," $3 int ");\n"
  [ preview_window $1 string $3 int $2 int $4 int ]

/* PTGField(table_name,name,r,c,w) */
Field:
  "nct_string( " $1 string "_winnum, 2, " $3 int ", " $4 int
    ", text(" $2 ") );\n"
  [ preview_field $3 int $4 int $5 int ]

/* row, col, attr, string, window */
/* Produce output only if string is non-empty */
String: "    nct_string( " $5 string "_winnum, "
	  $3 int ", " $1 int ", " $2 int
	  ", \"" $4 string "\" );\n"
  [ preview_label $4 string $3 int $2 int $1 int ]

RuleDef: "  static unsigned char nct_" $1 "_r" $2 int "[] = { " $3 ", 0 };\n"

/* ID#, tblname string, r, c, a ints */
HRule: "    nct_hrule( " $2 "_winnum, " $5 int ", "
	      $3 int ", " $4 int ", nct_" $2 "_r" $1 int " );\n"
  [ preview_hrule $1 int $5 int $3 int $4 int ]
VRule: "    nct_vrule( " $2 "_winnum, " $5 int ", "
	      $3 int ", " $4 int ", nct_" $2 "_r" $1 int " );\n"
  [ preview_vrule $1 int $5 int $3 int $4 int ]

