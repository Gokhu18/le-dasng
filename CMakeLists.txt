cmake_minimum_required(VERSION 2.8.8)
cmake_policy(SET CMP0048 NEW)
project(le_das VERSION 2.0.0)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
add_definitions( -D_POSIX_SOURCE=1 -D_XOPEN_SOURCE=500 )

if (1)
# Download and unpack googletest at configure time
configure_file(CMakeLists.txt.in googletest-download/CMakeLists.txt)
execute_process(COMMAND "${CMAKE_COMMAND}" -G "${CMAKE_GENERATOR}" .
    WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/googletest-download" )
execute_process(COMMAND "${CMAKE_COMMAND}" --build .
    WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/googletest-download" )

# Prevent GoogleTest from overriding our compiler/linker options
# when building with Visual Studio
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)

# Add googletest directly to our build. This adds
# the following targets: gtest, gtest_main, gmock
# and gmock_main
add_subdirectory("${CMAKE_BINARY_DIR}/googletest-src"
                 "${CMAKE_BINARY_DIR}/googletest-build")

# The gtest/gmock targets carry header search path
# dependencies automatically when using CMake 2.8.11 or
# later. Otherwise we have to add them here ourselves.
if(CMAKE_VERSION VERSION_LESS 2.8.11)
    include_directories("${gtest_SOURCE_DIR}/include"
                        "${gmock_SOURCE_DIR}/include")
endif(CMAKE_VERSION VERSION_LESS 2.8.11)

endif(1) # google test

add_subdirectory("${CMAKE_SOURCE_DIR}/dasio/src"
                 "${CMAKE_BINARY_DIR}/dasio/src")
add_subdirectory("${CMAKE_SOURCE_DIR}/dasio/test"
                 "${CMAKE_BINARY_DIR}/dasio/test")
add_subdirectory("${CMAKE_SOURCE_DIR}/nl/src"
                 "${CMAKE_BINARY_DIR}/nl/src")
add_subdirectory("${CMAKE_SOURCE_DIR}/tm/src"
                 "${CMAKE_BINARY_DIR}/tm/src")
add_subdirectory("${CMAKE_SOURCE_DIR}/cmdgen"
                 "${CMAKE_BINARY_DIR}/cmdgen")
add_subdirectory("${CMAKE_SOURCE_DIR}/oui/src"
                 "${CMAKE_BINARY_DIR}/oui/src")
